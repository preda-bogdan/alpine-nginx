# run nginx in foreground
daemon off;

error_log /DATA/logs/nginx/error.log warn;
pid /var/run/nginx.pid;
env DB_HOST;
env DB_NAME;
env DB_USER;
env DB_PASS;

worker_processes  auto;
events {
    worker_connections  4096;
}

http {
    sendfile on;
    include    /etc/nginx/mime.types;
    include    /etc/nginx/fastcgi.conf;
    default_type application/octet-stream;
    tcp_nopush   on;
    client_body_temp_path /tmp/nginx/body 1 2;
    fastcgi_temp_path /tmp/nginx/fastcgi_temp 1 2;

    #a new log format for detecting bad bots.
    log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';

    ## This log format makes it so we can see real requester's IP address \
    ##    not just the reverse proxy server's IP address. Also note, that \
    ##    "specialLog" can be replaced with any name you would like to \
    ##    give to this log format.
    log_format specialLog '$http_x_real_ip - $remote_user [$time_local]  '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    client_max_body_size 2G;

    server {

        #listen       [::]:80; #uncomment for IPv6 support
        listen       80;

        root /var/www/html;
        index  index.html index.htm;
        access_log /DATA/logs/nginx/access.log specialLog;
        error_log /DATA/logs/nginx/error.log;

        disable_symlinks off;

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # deny dot-files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }



        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
            access_log        off;
            log_not_found     off;
            expires           360d;
        }

        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    }

}
